{"version":3,"names":["_reactNative","require","LINKING_ERROR","Platform","select","ios","default","Shell","NativeModules","Proxy","get","Error","exports","rootShell","cmd","r","shell","endsWith","slice","length","rootShellSlice","fixR","split","userShell","userShellSlice","shellRaw","shellRawSlice"],"sources":["index.tsx"],"sourcesContent":["import {NativeModules, Platform} from 'react-native';\r\n\r\nconst LINKING_ERROR =\r\n  `The package 'react-native-shell' doesn't seem to be linked. Make sure: \\n\\n` +\r\n  Platform.select({ios: \"- You have run 'pod install'\\n\", default: ''}) +\r\n  '- You rebuilt the app after installing the package\\n' +\r\n  '- You are not using Expo managed workflow\\n';\r\n\r\nexport const Shell = NativeModules.Shell\r\n  ? NativeModules.Shell\r\n  : new Proxy(\r\n    {},\r\n    {\r\n      get() {\r\n        throw new Error(LINKING_ERROR);\r\n      },\r\n    }\r\n  );\r\n\r\nexport async function rootShell(cmd:string):Promise<string>{\r\n    var r=await Shell.shell(true,cmd)\r\n    if(r.endsWith(\"\\n\")){\r\n        return r.slice(0,r.length-1)\r\n    }\r\n    return r\r\n}\r\nexport async function rootShellSlice(cmd:string):Promise<string[]>{\r\n    var r=await rootShell(cmd)\r\n    if(r==\"\"){\r\n        return []\r\n    }\r\n    var fixR=r.split(\"\\n\")\r\n    return fixR\r\n}\r\nexport async function userShell(cmd:string):Promise<string>{\r\n    var r=await Shell.shell(false,cmd)\r\n    if(r.endsWith(\"\\n\")){\r\n        return r.slice(0,r.length-1)\r\n    }\r\n    return r\r\n}\r\nexport async function userShellSlice(cmd:string):Promise<string[]>{\r\n    var r=await userShell(cmd)\r\n    if(r==\"\"){\r\n        return []\r\n    }\r\n    var fixR=r.split(\"\\n\")\r\n    return fixR\r\n}\r\n\r\n\r\nexport async function shellRaw(cmd:string):Promise<string>{\r\n    var r=await Shell.shellRaw(cmd)\r\n    if(r.endsWith(\"\\n\")){\r\n        return r.slice(0,r.length-1)\r\n    }\r\n    return r\r\n}\r\nexport async function shellRawSlice(cmd:string):Promise<string[]>{\r\n    var r=await shellRaw(cmd)\r\n    if(r==\"\"){\r\n        return []\r\n    }\r\n    var fixR=r.split(\"\\n\")\r\n    return fixR\r\n}\r\n\r\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA,MAAMC,aAAa,GAChB,6EAA4E,GAC7EC,qBAAQ,CAACC,MAAM,CAAC;EAACC,GAAG,EAAE,gCAAgC;EAAEC,OAAO,EAAE;AAAE,CAAC,CAAC,GACrE,sDAAsD,GACtD,6CAA6C;AAExC,MAAMC,KAAK,GAAGC,0BAAa,CAACD,KAAK,GACpCC,0BAAa,CAACD,KAAK,GACnB,IAAIE,KAAK,CACT,CAAC,CAAC,EACF;EACEC,GAAGA,CAAA,EAAG;IACJ,MAAM,IAAIC,KAAK,CAACT,aAAa,CAAC;EAChC;AACF,CAAC,CACF;AAACU,OAAA,CAAAL,KAAA,GAAAA,KAAA;AAEG,eAAeM,SAASA,CAACC,GAAU,EAAiB;EACvD,IAAIC,CAAC,GAAC,MAAMR,KAAK,CAACS,KAAK,CAAC,IAAI,EAACF,GAAG,CAAC;EACjC,IAAGC,CAAC,CAACE,QAAQ,CAAC,IAAI,CAAC,EAAC;IAChB,OAAOF,CAAC,CAACG,KAAK,CAAC,CAAC,EAACH,CAAC,CAACI,MAAM,GAAC,CAAC,CAAC;EAChC;EACA,OAAOJ,CAAC;AACZ;AACO,eAAeK,cAAcA,CAACN,GAAU,EAAmB;EAC9D,IAAIC,CAAC,GAAC,MAAMF,SAAS,CAACC,GAAG,CAAC;EAC1B,IAAGC,CAAC,IAAE,EAAE,EAAC;IACL,OAAO,EAAE;EACb;EACA,IAAIM,IAAI,GAACN,CAAC,CAACO,KAAK,CAAC,IAAI,CAAC;EACtB,OAAOD,IAAI;AACf;AACO,eAAeE,SAASA,CAACT,GAAU,EAAiB;EACvD,IAAIC,CAAC,GAAC,MAAMR,KAAK,CAACS,KAAK,CAAC,KAAK,EAACF,GAAG,CAAC;EAClC,IAAGC,CAAC,CAACE,QAAQ,CAAC,IAAI,CAAC,EAAC;IAChB,OAAOF,CAAC,CAACG,KAAK,CAAC,CAAC,EAACH,CAAC,CAACI,MAAM,GAAC,CAAC,CAAC;EAChC;EACA,OAAOJ,CAAC;AACZ;AACO,eAAeS,cAAcA,CAACV,GAAU,EAAmB;EAC9D,IAAIC,CAAC,GAAC,MAAMQ,SAAS,CAACT,GAAG,CAAC;EAC1B,IAAGC,CAAC,IAAE,EAAE,EAAC;IACL,OAAO,EAAE;EACb;EACA,IAAIM,IAAI,GAACN,CAAC,CAACO,KAAK,CAAC,IAAI,CAAC;EACtB,OAAOD,IAAI;AACf;AAGO,eAAeI,QAAQA,CAACX,GAAU,EAAiB;EACtD,IAAIC,CAAC,GAAC,MAAMR,KAAK,CAACkB,QAAQ,CAACX,GAAG,CAAC;EAC/B,IAAGC,CAAC,CAACE,QAAQ,CAAC,IAAI,CAAC,EAAC;IAChB,OAAOF,CAAC,CAACG,KAAK,CAAC,CAAC,EAACH,CAAC,CAACI,MAAM,GAAC,CAAC,CAAC;EAChC;EACA,OAAOJ,CAAC;AACZ;AACO,eAAeW,aAAaA,CAACZ,GAAU,EAAmB;EAC7D,IAAIC,CAAC,GAAC,MAAMU,QAAQ,CAACX,GAAG,CAAC;EACzB,IAAGC,CAAC,IAAE,EAAE,EAAC;IACL,OAAO,EAAE;EACb;EACA,IAAIM,IAAI,GAACN,CAAC,CAACO,KAAK,CAAC,IAAI,CAAC;EACtB,OAAOD,IAAI;AACf"}