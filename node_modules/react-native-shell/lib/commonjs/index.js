"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Shell = void 0;
exports.rootShell = rootShell;
exports.rootShellSlice = rootShellSlice;
exports.shellRaw = shellRaw;
exports.shellRawSlice = shellRawSlice;
exports.userShell = userShell;
exports.userShellSlice = userShellSlice;
var _reactNative = require("react-native");
const LINKING_ERROR = `The package 'react-native-shell' doesn't seem to be linked. Make sure: \n\n` + _reactNative.Platform.select({
  ios: "- You have run 'pod install'\n",
  default: ''
}) + '- You rebuilt the app after installing the package\n' + '- You are not using Expo managed workflow\n';
const Shell = _reactNative.NativeModules.Shell ? _reactNative.NativeModules.Shell : new Proxy({}, {
  get() {
    throw new Error(LINKING_ERROR);
  }
});
exports.Shell = Shell;
async function rootShell(cmd) {
  var r = await Shell.shell(true, cmd);
  if (r.endsWith("\n")) {
    return r.slice(0, r.length - 1);
  }
  return r;
}
async function rootShellSlice(cmd) {
  var r = await rootShell(cmd);
  if (r == "") {
    return [];
  }
  var fixR = r.split("\n");
  return fixR;
}
async function userShell(cmd) {
  var r = await Shell.shell(false, cmd);
  if (r.endsWith("\n")) {
    return r.slice(0, r.length - 1);
  }
  return r;
}
async function userShellSlice(cmd) {
  var r = await userShell(cmd);
  if (r == "") {
    return [];
  }
  var fixR = r.split("\n");
  return fixR;
}
async function shellRaw(cmd) {
  var r = await Shell.shellRaw(cmd);
  if (r.endsWith("\n")) {
    return r.slice(0, r.length - 1);
  }
  return r;
}
async function shellRawSlice(cmd) {
  var r = await shellRaw(cmd);
  if (r == "") {
    return [];
  }
  var fixR = r.split("\n");
  return fixR;
}
//# sourceMappingURL=index.js.map